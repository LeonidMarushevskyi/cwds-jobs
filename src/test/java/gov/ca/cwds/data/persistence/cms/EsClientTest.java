package gov.ca.cwds.data.persistence.cms;

import java.util.HashMap;
import gov.ca.cwds.data.persistence.cms.EsClient.*;
import static org.hamcrest.CoreMatchers.*;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.mockito.BDDMockito.*;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Comparator;
import java.util.Date;
import java.util.Map;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Table;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.annotations.ColumnTransformer;
import org.hibernate.annotations.NamedNativeQuery;
import org.hibernate.annotations.Type;
import gov.ca.cwds.data.es.ElasticSearchPersonAka;
import gov.ca.cwds.data.es.ElasticSearchSafetyAlert;
import gov.ca.cwds.data.es.ElasticSearchSystemCode;
import gov.ca.cwds.data.persistence.PersistentObject;
import gov.ca.cwds.data.persistence.cms.rep.CmsReplicationOperation;
import gov.ca.cwds.data.persistence.cms.rep.ReplicatedAddress;
import gov.ca.cwds.data.persistence.cms.rep.ReplicatedClient;
import gov.ca.cwds.data.persistence.cms.rep.ReplicatedClientAddress;
import gov.ca.cwds.data.std.ApiGroupNormalizer;
import gov.ca.cwds.neutron.util.NeutronDateUtils;
import gov.ca.cwds.neutron.util.transform.ElasticTransformer;
import gov.ca.cwds.rest.api.domain.DomainChef;
import gov.ca.cwds.rest.api.domain.cms.LegacyTable;
import gov.ca.cwds.rest.api.domain.cms.SystemCodeCache;
public class EsClientTest {

	@Test
	public void type() throws Exception {
		// TODO auto-generated by JUnit Helper.
		assertThat(EsClient.class, notNullValue());
	}

	@Test
	public void instantiation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		assertThat(target, notNullValue());
	}

	@Test
	public void extract_Args__ResultSet() throws Exception {
		// TODO auto-generated by JUnit Helper.
		// given
		ResultSet rs = mock(ResultSet.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		EsClient actual = EsClient.extract(rs);
		// then
		// e.g. : verify(mocked).called();
		EsClient expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void extract_Args__ResultSet_T__SQLException() throws Exception {
		// TODO auto-generated by JUnit Helper.
		// given
		ResultSet rs = mock(ResultSet.class);
		// e.g. : given(mocked.called()).willReturn(1);
		try {
			// when
			EsClient.extract(rs);
			fail("Expected exception was not thrown!");
		} catch (SQLException e) {
			// then
		}
	}

	@Test
	public void getNormalizationClass_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Class<ReplicatedClient> actual = target.getNormalizationClass();
		// then
		// e.g. : verify(mocked).called();
		Class<ReplicatedClient> expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void normalize_Args__Map() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Map<Object, ReplicatedClient> map = new HashMap<Object, ReplicatedClient>();
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		ReplicatedClient actual = target.normalize(map);
		// then
		// e.g. : verify(mocked).called();
		ReplicatedClient expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltAdjudicatedDelinquentIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltAdjudicatedDelinquentIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltAdoptionStatusCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltAdoptionStatusCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltAlienRegistrationNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltAlienRegistrationNumber();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltBirthCity_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltBirthCity();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltBirthCountryCodeType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltBirthCountryCodeType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltBirthDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltBirthDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltBirthFacilityName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltBirthFacilityName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltBirthStateCodeType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltBirthStateCodeType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltBirthplaceVerifiedIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltBirthplaceVerifiedIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltBirthplaceVerifiedIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltBirthplaceVerifiedIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltBirthplaceVerifiedIndicator(cltBirthplaceVerifiedIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltChildClientIndicatorVar_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltChildClientIndicatorVar();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltClientIndexNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltClientIndexNumber();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltCommentDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCommentDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltCommonFirstName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCommonFirstName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltCommonLastName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCommonLastName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltCommonMiddleName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCommonMiddleName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltConfidentialityActionDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltConfidentialityActionDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltConfidentialityActionDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltConfidentialityActionDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltConfidentialityActionDate(cltConfidentialityActionDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltConfidentialityInEffectIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltConfidentialityInEffectIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltConfidentialityInEffectIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltConfidentialityInEffectIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltConfidentialityInEffectIndicator(cltConfidentialityInEffectIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltCreationDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltCreationDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltCreationDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltCreationDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCreationDate(cltCreationDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltCurrCaChildrenServIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCurrCaChildrenServIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltCurrCaChildrenServIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCurrCaChildrenServIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCurrCaChildrenServIndicator(cltCurrCaChildrenServIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltCurrentlyOtherDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCurrentlyOtherDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltCurrentlyRegionalCenterIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltCurrentlyRegionalCenterIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltDeathDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltDeathDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltDeathDateVerifiedIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltDeathDateVerifiedIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltDeathPlace_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltDeathPlace();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltDeathReasonText_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltDeathReasonText();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltDriverLicenseNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltDriverLicenseNumber();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltDriverLicenseStateCodeType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltDriverLicenseStateCodeType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltEmailAddress_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltEmailAddress();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltEstimatedDobCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltEstimatedDobCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltEthUnableToDetReasonCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltEthUnableToDetReasonCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltGenderCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltGenderCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltHealthSummaryText_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltHealthSummaryText();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltHealthSummaryText_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltHealthSummaryText = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltHealthSummaryText(cltHealthSummaryText);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltHispUnableToDetReasonCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltHispUnableToDetReasonCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltHispUnableToDetReasonCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltHispUnableToDetReasonCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltHispUnableToDetReasonCode(cltHispUnableToDetReasonCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltHispanicOriginCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltHispanicOriginCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltHispanicOriginCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltHispanicOriginCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltHispanicOriginCode(cltHispanicOriginCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltId(cltId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltImmigrationCountryCodeType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltImmigrationCountryCodeType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltImmigrationCountryCodeType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltImmigrationCountryCodeType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltImmigrationCountryCodeType(cltImmigrationCountryCodeType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltImmigrationStatusType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltImmigrationStatusType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltIncapacitatedParentCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltIncapacitatedParentCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltIndividualHealthCarePlanIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltIndividualHealthCarePlanIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltLimitationOnScpHealthIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltLimitationOnScpHealthIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltLiterateCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltLiterateCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltMaritalCohabitatnHstryIndicatorVar_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltMaritalCohabitatnHstryIndicatorVar();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltMaritalStatusType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltMaritalStatusType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltMilitaryStatusCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltMilitaryStatusCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltMotherParentalRightTermDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltMotherParentalRightTermDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltNamePrefixDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltNamePrefixDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltNameType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltNameType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltOutstandingWarrantIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltOutstandingWarrantIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltPrevCaChildrenServIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltPrevCaChildrenServIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltPrevOtherDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltPrevOtherDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltPrevRegionalCenterIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltPrevRegionalCenterIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltPrevRegionalCenterIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltPrevRegionalCenterIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltPrevRegionalCenterIndicator(cltPrevRegionalCenterIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltPrimaryEthnicityType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltPrimaryEthnicityType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltPrimaryEthnicityType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltPrimaryEthnicityType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltPrimaryEthnicityType(cltPrimaryEthnicityType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltPrimaryLanguageType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltPrimaryLanguageType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltPrimaryLanguageType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltPrimaryLanguageType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltPrimaryLanguageType(cltPrimaryLanguageType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltReligionType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltReligionType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltReligionType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltReligionType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltReligionType(cltReligionType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSecondaryLanguageType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getCltSecondaryLanguageType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSecondaryLanguageType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltSecondaryLanguageType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSecondaryLanguageType(cltSecondaryLanguageType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSensitiveHlthInfoOnFileIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSensitiveHlthInfoOnFileIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSensitiveHlthInfoOnFileIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSensitiveHlthInfoOnFileIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSensitiveHlthInfoOnFileIndicator(cltSensitiveHlthInfoOnFileIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSensitivityIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSensitivityIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSensitivityIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSensitivityIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSensitivityIndicator(cltSensitivityIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSoc158PlacementCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSoc158PlacementCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSoc158PlacementCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSoc158PlacementCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSoc158PlacementCode(cltSoc158PlacementCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSoc158SealedClientIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSoc158SealedClientIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSoc158SealedClientIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSoc158SealedClientIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSoc158SealedClientIndicator(cltSoc158SealedClientIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSocialSecurityNumChangedCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSocialSecurityNumChangedCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSocialSecurityNumChangedCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSocialSecurityNumChangedCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSocialSecurityNumChangedCode(cltSocialSecurityNumChangedCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSocialSecurityNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSocialSecurityNumber();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSocialSecurityNumber_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSocialSecurityNumber = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSocialSecurityNumber(cltSocialSecurityNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltSuffixTitleDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltSuffixTitleDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltSuffixTitleDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltSuffixTitleDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltSuffixTitleDescription(cltSuffixTitleDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltTribalAncestryClientIndicatorVar_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltTribalAncestryClientIndicatorVar();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltTribalAncestryClientIndicatorVar_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltTribalAncestryClientIndicatorVar = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltTribalAncestryClientIndicatorVar(cltTribalAncestryClientIndicatorVar);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltTribalMembrshpVerifctnIndicatorVar_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltTribalMembrshpVerifctnIndicatorVar();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltTribalMembrshpVerifctnIndicatorVar_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltTribalMembrshpVerifctnIndicatorVar = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltTribalMembrshpVerifctnIndicatorVar(cltTribalMembrshpVerifctnIndicatorVar);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltUnemployedParentCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltUnemployedParentCode();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltUnemployedParentCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltUnemployedParentCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltUnemployedParentCode(cltUnemployedParentCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltZippyCreatedIndicator_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltZippyCreatedIndicator();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltZippyCreatedIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltZippyCreatedIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltZippyCreatedIndicator(cltZippyCreatedIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltReplicationOperation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		CmsReplicationOperation actual = target.getCltReplicationOperation();
		// then
		// e.g. : verify(mocked).called();
		CmsReplicationOperation expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltReplicationOperation_Args__CmsReplicationOperation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		CmsReplicationOperation cltReplicationOperation = mock(CmsReplicationOperation.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltReplicationOperation(cltReplicationOperation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltReplicationDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltReplicationDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltReplicationDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltReplicationDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltReplicationDate(cltReplicationDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltLastUpdatedId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getCltLastUpdatedId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltLastUpdatedId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltLastUpdatedId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltLastUpdatedId(cltLastUpdatedId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getCltLastUpdatedTime_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltLastUpdatedTime();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setCltLastUpdatedTime_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltLastUpdatedTime = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltLastUpdatedTime(cltLastUpdatedTime);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaReplicationOperation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		CmsReplicationOperation actual = target.getClaReplicationOperation();
		// then
		// e.g. : verify(mocked).called();
		CmsReplicationOperation expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaReplicationOperation_Args__CmsReplicationOperation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		CmsReplicationOperation claReplicationOperation = mock(CmsReplicationOperation.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaReplicationOperation(claReplicationOperation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaReplicationDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getClaReplicationDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaReplicationDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date claReplicationDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaReplicationDate(claReplicationDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaLastUpdatedId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaLastUpdatedId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaLastUpdatedId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claLastUpdatedId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaLastUpdatedId(claLastUpdatedId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaLastUpdatedTime_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getClaLastUpdatedTime();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaLastUpdatedTime_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date claLastUpdatedTime = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaLastUpdatedTime(claLastUpdatedTime);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaFkAddress_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaFkAddress();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaFkAddress_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claFkAddress = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaFkAddress(claFkAddress);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaFkClient_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaFkClient();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaFkClient_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claFkClient = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaFkClient(claFkClient);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaFkReferral_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaFkReferral();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaFkReferral_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claFkReferral = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaFkReferral(claFkReferral);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaAddressType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getClaAddressType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaAddressType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short claAddressType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaAddressType(claAddressType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaHomelessInd_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaHomelessInd();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaHomelessInd_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claHomelessInd = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaHomelessInd(claHomelessInd);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaBkInmtId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaBkInmtId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaBkInmtId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claBkInmtId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaBkInmtId(claBkInmtId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaEffectiveEndDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getClaEffectiveEndDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaEffectiveEndDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date claEffectiveEndDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaEffectiveEndDate(claEffectiveEndDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClaEffectiveStartDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getClaEffectiveStartDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaEffectiveStartDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date claEffectiveStartDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaEffectiveStartDate(claEffectiveStartDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrId(adrId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrCity_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrCity();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrCity_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrCity = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrCity(adrCity);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrEmergencyNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		BigDecimal actual = target.getAdrEmergencyNumber();
		// then
		// e.g. : verify(mocked).called();
		BigDecimal expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrEmergencyNumber_Args__BigDecimal() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		BigDecimal adrEmergencyNumber = mock(BigDecimal.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrEmergencyNumber(adrEmergencyNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrEmergencyExtension_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Integer actual = target.getAdrEmergencyExtension();
		// then
		// e.g. : verify(mocked).called();
		Integer expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrEmergencyExtension_Args__Integer() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Integer adrEmergencyExtension = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrEmergencyExtension(adrEmergencyExtension);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrFrgAdrtB_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrFrgAdrtB();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrFrgAdrtB_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrFrgAdrtB = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrFrgAdrtB(adrFrgAdrtB);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrGovernmentEntityCd_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getAdrGovernmentEntityCd();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrGovernmentEntityCd_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short adrGovernmentEntityCd = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrGovernmentEntityCd(adrGovernmentEntityCd);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrMessageNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		BigDecimal actual = target.getAdrMessageNumber();
		// then
		// e.g. : verify(mocked).called();
		BigDecimal expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrMessageNumber_Args__BigDecimal() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		BigDecimal adrMessageNumber = mock(BigDecimal.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrMessageNumber(adrMessageNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrMessageExtension_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Integer actual = target.getAdrMessageExtension();
		// then
		// e.g. : verify(mocked).called();
		Integer expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrMessageExtension_Args__Integer() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Integer adrMessageExtension = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrMessageExtension(adrMessageExtension);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrHeaderAddress_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrHeaderAddress();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrHeaderAddress_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrHeaderAddress = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrHeaderAddress(adrHeaderAddress);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrPrimaryNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		BigDecimal actual = target.getAdrPrimaryNumber();
		// then
		// e.g. : verify(mocked).called();
		BigDecimal expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrPrimaryNumber_Args__BigDecimal() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		BigDecimal adrPrimaryNumber = mock(BigDecimal.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrPrimaryNumber(adrPrimaryNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrPrimaryExtension_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Integer actual = target.getAdrPrimaryExtension();
		// then
		// e.g. : verify(mocked).called();
		Integer expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrState_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getAdrState();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrStreetName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrStreetName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrStreetNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrStreetNumber();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrZip_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrZip();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrAddressDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrAddressDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAdrAddressDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrAddressDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrAddressDescription(adrAddressDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrZip4_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getAdrZip4();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrPostDirCd_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrPostDirCd();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrPreDirCd_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrPreDirCd();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrStreetSuffixCd_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getAdrStreetSuffixCd();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrUnitDesignationCd_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getAdrUnitDesignationCd();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrUnitNumber_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAdrUnitNumber();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getClaId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClaId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getClientCounty_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getClientCounty();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClientCounty_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short clientCounty = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClientCounty(clientCounty);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAdrReplicationOperation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		CmsReplicationOperation actual = target.getAdrReplicationOperation();
		// then
		// e.g. : verify(mocked).called();
		CmsReplicationOperation expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getAdrReplicationDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getAdrReplicationDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getLastChange_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getLastChange();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getNormalizationGroupKey_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getNormalizationGroupKey();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getPrimaryKey_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Serializable actual = target.getPrimaryKey();
		// then
		// e.g. : verify(mocked).called();
		Serializable expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void compare_Args__EsClient__EsClient() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		EsClient o1 = mock(EsClient.class);
		EsClient o2 = mock(EsClient.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		int actual = target.compare(o1, o2);
		// then
		// e.g. : verify(mocked).called();
		int expected = 0;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void compareTo_Args__EsClient() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		EsClient o = mock(EsClient.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		int actual = target.compareTo(o);
		// then
		// e.g. : verify(mocked).called();
		int expected = 0;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void hashCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		int actual = target.hashCode();
		// then
		// e.g. : verify(mocked).called();
		int expected = 0;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void equals_Args__Object() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Object obj = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		boolean actual = target.equals(obj);
		// then
		// e.g. : verify(mocked).called();
		boolean expected = false;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getCltFatherParentalRightTermDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getCltFatherParentalRightTermDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClaId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String claId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClaId(claId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getClientCountyId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClientCountyId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getClientEthnicityId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClientEthnicityId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getClientEthnicityCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getClientEthnicityCode();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void getClientCountyRule_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getClientCountyRule();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setClientCountyRule_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String clientCountyRule = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClientCountyRule(clientCountyRule);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setClientCountyId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String clientCountyId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClientCountyId(clientCountyId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setClientEthnicityId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String clientEthnicityId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClientEthnicityId(clientEthnicityId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setClientEthnicityCode_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short clientEthnicityCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setClientEthnicityCode(clientEthnicityCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrReplicationOperation_Args__CmsReplicationOperation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		CmsReplicationOperation adrReplicationOperation = mock(CmsReplicationOperation.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrReplicationOperation(adrReplicationOperation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getSafetyAlertId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String safetyAlertId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertId(safetyAlertId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertActivationReasonCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getSafetyAlertActivationReasonCode();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertActivationReasonCode_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short safetyAlertActivationReasonCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertActivationReasonCode(safetyAlertActivationReasonCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertActivationDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getSafetyAlertActivationDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertActivationDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date safetyAlertActivationDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertActivationDate(safetyAlertActivationDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertActivationCountyCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getSafetyAlertActivationCountyCode();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertActivationCountyCode_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short safetyAlertActivationCountyCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertActivationCountyCode(safetyAlertActivationCountyCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertActivationExplanation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getSafetyAlertActivationExplanation();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertActivationExplanation_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String safetyAlertActivationExplanation = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertActivationExplanation(safetyAlertActivationExplanation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertDeactivationDate_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getSafetyAlertDeactivationDate();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertDeactivationDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date safetyAlertDeactivationDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertDeactivationDate(safetyAlertDeactivationDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertDeactivationCountyCode_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getSafetyAlertDeactivationCountyCode();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertDeactivationCountyCode_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short safetyAlertDeactivationCountyCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertDeactivationCountyCode(safetyAlertDeactivationCountyCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertDeactivationExplanation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getSafetyAlertDeactivationExplanation();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertDeactivationExplanation_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String safetyAlertDeactivationExplanation = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertDeactivationExplanation(safetyAlertDeactivationExplanation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertLastUpdatedId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getSafetyAlertLastUpdatedId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertLastUpdatedId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String safetyAlertLastUpdatedId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertLastUpdatedId(safetyAlertLastUpdatedId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertLastUpdatedTimestamp_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getSafetyAlertLastUpdatedTimestamp();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertLastUpdatedTimestamp_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date safetyAlertLastUpdatedTimestamp = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertLastUpdatedTimestamp(safetyAlertLastUpdatedTimestamp);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertLastUpdatedOperation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		CmsReplicationOperation actual = target.getSafetyAlertLastUpdatedOperation();
		// then
		// e.g. : verify(mocked).called();
		CmsReplicationOperation expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertLastUpdatedOperation_Args__CmsReplicationOperation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		CmsReplicationOperation safetyAlertLastUpdatedOperation = mock(CmsReplicationOperation.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertLastUpdatedOperation(safetyAlertLastUpdatedOperation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getSafetyAlertReplicationTimestamp_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getSafetyAlertReplicationTimestamp();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setSafetyAlertReplicationTimestamp_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date safetyAlertReplicationTimestamp = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setSafetyAlertReplicationTimestamp(safetyAlertReplicationTimestamp);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaId(akaId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaFirstName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaFirstName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaFirstName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaFirstName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaFirstName(akaFirstName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaLastName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaLastName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaLastName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaLastName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaLastName(akaLastName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaMiddleName_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaMiddleName();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaMiddleName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaMiddleName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaMiddleName(akaMiddleName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaNamePrefixDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaNamePrefixDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaNamePrefixDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaNamePrefixDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaNamePrefixDescription(akaNamePrefixDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaNameType_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Short actual = target.getAkaNameType();
		// then
		// e.g. : verify(mocked).called();
		Short expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaNameType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short akaNameType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaNameType(akaNameType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaSuffixTitleDescription_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaSuffixTitleDescription();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaSuffixTitleDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaSuffixTitleDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaSuffixTitleDescription(akaSuffixTitleDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaLastUpdatedId_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		String actual = target.getAkaLastUpdatedId();
		// then
		// e.g. : verify(mocked).called();
		String expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaLastUpdatedId_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String akaLastUpdatedId = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaLastUpdatedId(akaLastUpdatedId);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaLastUpdatedTimestamp_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getAkaLastUpdatedTimestamp();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaLastUpdatedTimestamp_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date akaLastUpdatedTimestamp = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaLastUpdatedTimestamp(akaLastUpdatedTimestamp);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaLastUpdatedOperation_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		CmsReplicationOperation actual = target.getAkaLastUpdatedOperation();
		// then
		// e.g. : verify(mocked).called();
		CmsReplicationOperation expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaLastUpdatedOperation_Args__CmsReplicationOperation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		CmsReplicationOperation akaLastUpdatedOperation = mock(CmsReplicationOperation.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaLastUpdatedOperation(akaLastUpdatedOperation);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void getAkaReplicationTimestamp_Args__() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		Date actual = target.getAkaReplicationTimestamp();
		// then
		// e.g. : verify(mocked).called();
		Date expected = null;
		assertThat(actual, is(equalTo(expected)));
	}

	@Test
	public void setAkaReplicationTimestamp_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date akaReplicationTimestamp = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAkaReplicationTimestamp(akaReplicationTimestamp);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setLastChange_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date lastChange = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setLastChange(lastChange);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltAdjudicatedDelinquentIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltAdjudicatedDelinquentIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltAdjudicatedDelinquentIndicator(cltAdjudicatedDelinquentIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltAdoptionStatusCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltAdoptionStatusCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltAdoptionStatusCode(cltAdoptionStatusCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltAlienRegistrationNumber_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltAlienRegistrationNumber = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltAlienRegistrationNumber(cltAlienRegistrationNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltBirthCity_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltBirthCity = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltBirthCity(cltBirthCity);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltBirthCountryCodeType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltBirthCountryCodeType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltBirthCountryCodeType(cltBirthCountryCodeType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltBirthDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltBirthDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltBirthDate(cltBirthDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltBirthFacilityName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltBirthFacilityName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltBirthFacilityName(cltBirthFacilityName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltBirthStateCodeType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltBirthStateCodeType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltBirthStateCodeType(cltBirthStateCodeType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltChildClientIndicatorVar_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltChildClientIndicatorVar = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltChildClientIndicatorVar(cltChildClientIndicatorVar);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltClientIndexNumber_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltClientIndexNumber = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltClientIndexNumber(cltClientIndexNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltCommentDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCommentDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCommentDescription(cltCommentDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltCommonFirstName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCommonFirstName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCommonFirstName(cltCommonFirstName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltCommonLastName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCommonLastName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCommonLastName(cltCommonLastName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltCommonMiddleName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCommonMiddleName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCommonMiddleName(cltCommonMiddleName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltCurrentlyOtherDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCurrentlyOtherDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCurrentlyOtherDescription(cltCurrentlyOtherDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltCurrentlyRegionalCenterIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltCurrentlyRegionalCenterIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltCurrentlyRegionalCenterIndicator(cltCurrentlyRegionalCenterIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltDeathDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltDeathDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltDeathDate(cltDeathDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltDeathDateVerifiedIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltDeathDateVerifiedIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltDeathDateVerifiedIndicator(cltDeathDateVerifiedIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltDeathPlace_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltDeathPlace = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltDeathPlace(cltDeathPlace);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltDeathReasonText_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltDeathReasonText = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltDeathReasonText(cltDeathReasonText);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltDriverLicenseNumber_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltDriverLicenseNumber = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltDriverLicenseNumber(cltDriverLicenseNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltDriverLicenseStateCodeType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltDriverLicenseStateCodeType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltDriverLicenseStateCodeType(cltDriverLicenseStateCodeType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltEmailAddress_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltEmailAddress = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltEmailAddress(cltEmailAddress);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltEstimatedDobCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltEstimatedDobCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltEstimatedDobCode(cltEstimatedDobCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltEthUnableToDetReasonCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltEthUnableToDetReasonCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltEthUnableToDetReasonCode(cltEthUnableToDetReasonCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltFatherParentalRightTermDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltFatherParentalRightTermDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltFatherParentalRightTermDate(cltFatherParentalRightTermDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltGenderCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltGenderCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltGenderCode(cltGenderCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltImmigrationStatusType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltImmigrationStatusType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltImmigrationStatusType(cltImmigrationStatusType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltIncapacitatedParentCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltIncapacitatedParentCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltIncapacitatedParentCode(cltIncapacitatedParentCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltIndividualHealthCarePlanIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltIndividualHealthCarePlanIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltIndividualHealthCarePlanIndicator(cltIndividualHealthCarePlanIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltLimitationOnScpHealthIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltLimitationOnScpHealthIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltLimitationOnScpHealthIndicator(cltLimitationOnScpHealthIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltLiterateCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltLiterateCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltLiterateCode(cltLiterateCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltMaritalCohabitatnHstryIndicatorVar_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltMaritalCohabitatnHstryIndicatorVar = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltMaritalCohabitatnHstryIndicatorVar(cltMaritalCohabitatnHstryIndicatorVar);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltMaritalStatusType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltMaritalStatusType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltMaritalStatusType(cltMaritalStatusType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltMilitaryStatusCode_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltMilitaryStatusCode = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltMilitaryStatusCode(cltMilitaryStatusCode);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltMotherParentalRightTermDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date cltMotherParentalRightTermDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltMotherParentalRightTermDate(cltMotherParentalRightTermDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltNamePrefixDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltNamePrefixDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltNamePrefixDescription(cltNamePrefixDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltNameType_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short cltNameType = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltNameType(cltNameType);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltOutstandingWarrantIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltOutstandingWarrantIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltOutstandingWarrantIndicator(cltOutstandingWarrantIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltPrevCaChildrenServIndicator_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltPrevCaChildrenServIndicator = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltPrevCaChildrenServIndicator(cltPrevCaChildrenServIndicator);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setCltPrevOtherDescription_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String cltPrevOtherDescription = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setCltPrevOtherDescription(cltPrevOtherDescription);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrReplicationDate_Args__Date() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Date adrReplicationDate = mock(Date.class);
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrReplicationDate(adrReplicationDate);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrPrimaryExtension_Args__Integer() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Integer adrPrimaryExtension = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrPrimaryExtension(adrPrimaryExtension);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrState_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short adrState = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrState(adrState);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrStreetName_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrStreetName = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrStreetName(adrStreetName);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrStreetNumber_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrStreetNumber = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrStreetNumber(adrStreetNumber);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrZip_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrZip = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrZip(adrZip);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrZip4_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short adrZip4 = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrZip4(adrZip4);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrPostDirCd_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrPostDirCd = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrPostDirCd(adrPostDirCd);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrPreDirCd_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrPreDirCd = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrPreDirCd(adrPreDirCd);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrStreetSuffixCd_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short adrStreetSuffixCd = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrStreetSuffixCd(adrStreetSuffixCd);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrUnitDesignationCd_Args__Short() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		Short adrUnitDesignationCd = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrUnitDesignationCd(adrUnitDesignationCd);
		// then
		// e.g. : verify(mocked).called();
	}

	@Test
	public void setAdrUnitNumber_Args__String() throws Exception {
		// TODO auto-generated by JUnit Helper.
		EsClient target = new EsClient();
		// given
		String adrUnitNumber = null;
		// e.g. : given(mocked.called()).willReturn(1);
		// when
		target.setAdrUnitNumber(adrUnitNumber);
		// then
		// e.g. : verify(mocked).called();
	}

}
